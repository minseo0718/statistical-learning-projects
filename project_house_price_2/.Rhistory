AvgAmericaAsia <-
MethaneAmericaAsia %>%
group_by(Continent) %>%
summarise(Average = sum(Methane, na.rm = TRUE) / length(Continent)); AvgAmericaAsia
AvgPlot <-
AvgAmericaAsia %>%
ggplot(aes(x = Continent, y = Average)) +
geom_col(aes(fill = Continent))
AvgPlot
View(FilteredAmericaEmissions)
filteringMethane <- function(data) {
data %>%
transmute(Area, Element, Y2019) %>%
filter(Element == "CH4 emissions") %>% # only use methane emissions
group_by(Area) %>%
summarise(Sum = sum(Y2019)) # total amount of methane emissions by each area in 2019
} # creating filteringMethane to use it for Asia data
FilteredAmericaEmissions <- filteringMethane(Data1)
head(FilteredAmericaEmissions)
filteringMethane <- function(data) {
data %>%
transmute(Area, Unit, Element, Y2019) %>%
filter(Element == "CH4 emissions") %>% # only use methane emissions
group_by(Area, Element, Unit) %>%
summarise(Sum = sum(Y2019)) # total amount of methane emissions by each area in 2019
} # creating filteringMethane to use it for Asia data
FilteredAmericaEmissions <- filteringMethane(Data1)
head(FilteredAmericaEmissions)
FilteredAsiaEmissions <- filteringMethane(Data2)
head(FilteredAsiaEmissions)
Data1 <- read.csv("Emissions_America.csv"); # From Food and Agriculture Organization website
str(Data1)
Data2 <- read.csv("Emissions_Asia.csv"); # From Food and Agriculture Organization website
str(Data2)
filteringMethane <- function(data) {
data %>%
transmute(Area, Unit, Element, Y2019) %>%
filter(Element == "CH4 emissions") %>% # only use methane emissions
group_by(Area, Element, Unit) %>%
summarise(Sum = sum(Y2019)) # total amount of methane emissions by each area in 2019
} # creating filteringMethane to use it for Asia data
FilteredAmericaEmissions <- filteringMethane(Data1)
head(FilteredAmericaEmissions)
FilteredAsiaEmissions <- filteringMethane(Data2)
head(FilteredAsiaEmissions)
FilteredAmericaEmissions2 <-
FilteredAmericaEmissions %>%
pivot_wider(names_from = Element , values_from = Sum) %>% # making a wide table by using the Element column
rename("Methane" = "CH4 emissions") %>%
bind_cols(Continent = "America") # adding column to easily distinguish when combining with Asia Emissions data
FilteredAmericaEmissions2 # final table for visualization
FilteredAsiaEmissions2 <-
FilteredAsiaEmissions %>%
pivot_wider(names_from = Element , values_from = Sum) %>% # making a wide table by using the Element column
rename("Methane" = "CH4 emissions") %>%
bind_cols(Continent = "Asia") # adding column to easily distinguish when combining with Asia Emissions data
FilteredAsiaEmissions2 # final table for visualization
AmericaPlot <- FilteredAmericaEmissions2 %>%
ggplot(aes(x = Area, y = Methane)) +
geom_point(color = "#F8766D")
AmericaPlot
AsiaPlot <- FilteredAsiaEmissions2 %>%
ggplot(aes(x = Area, y = Methane)) +
geom_point(color = "#00BFC4")
AsiaPlot
MethaneAmericaAsia <- bind_rows(FilteredAmericaEmissions2, FilteredAsiaEmissions2)
AmericaAsiaDensity <-
ggplot(MethaneAmericaAsia, aes(x = Methane, fill = Continent)) +
geom_density(alpha = .5)
AmericaAsiaDensity # overlaid density distributions of America and Aisa emisionss
AmericaAsiaplot <-
ggplot(data = FilteredAmericaEmissions2, aes(x = Area, y = Methane)) +
geom_point(aes(color = Continent)) +
geom_point(data = FilteredAsiaEmissions2, aes(color=Continent)) +
ylim(0, 1000) # ymax = 1000; removing some outliers
AmericaAsiaplot
AvgAmericaAsia <-
MethaneAmericaAsia %>%
group_by(Continent) %>%
summarise(Average = sum(Methane, na.rm = TRUE) / length(Continent)); AvgAmericaAsia
AvgPlot <-
AvgAmericaAsia %>%
ggplot(aes(x = Continent, y = Average)) +
geom_col(aes(fill = Continent))
AvgPlot
AmericaAsiaDensity <-
ggplot(MethaneAmericaAsia, aes(x = Methane, fill = Continent)) +
geom_density(alpha = .3)
AmericaAsiaDensity # overlaid density distributions of America and Aisa emisionss
AmericaAsiaDensity <-
ggplot(MethaneAmericaAsia, aes(x = Methane, fill = Continent)) +
geom_density(alpha = .4)
AmericaAsiaDensity # overlaid density distributions of America and Aisa emisionss
AmericaAsiaDensity <-
ggplot(MethaneAmericaAsia, aes(x = Methane, fill = Continent)) +
geom_density(alpha = .5)
AmericaAsiaDensity # overlaid density distributions of America and Aisa emisionss
Data1 <- read.csv("Emissions_America.csv"); # From Food and Agriculture Organization website
str(Data1)
Data2 <- read.csv("Emissions_Asia.csv"); # From Food and Agriculture Organization website
str(Data2)
filteringMethane <- function(data) {
data %>%
transmute(Area, Unit, Element, Y2019) %>%
filter(Element == "CH4 emissions") %>% # only use methane emissions
group_by(Area, Element, Unit) %>%
summarise(Sum = sum(Y2019)) # total amount of methane emissions by each area in 2019
} # creating filteringMethane to use it for Asia data
FilteredAmericaEmissions <- filteringMethane(Data1)
head(FilteredAmericaEmissions)
FilteredAsiaEmissions <- filteringMethane(Data2) # function created from the previous r code chunk
head(FilteredAsiaEmissions)
FilteredAmericaEmissions2 <-
FilteredAmericaEmissions %>%
pivot_wider(names_from = Element , values_from = Sum) %>% # making a wide table by using the Element column
rename("Methane" = "CH4 emissions") %>%
bind_cols(Continent = "America") # adding column to easily distinguish when combining with Asia Emissions data
FilteredAmericaEmissions2 # final table for visualization
FilteredAsiaEmissions2 <-
FilteredAsiaEmissions %>%
pivot_wider(names_from = Element , values_from = Sum) %>% # making a wide table by using the Element column
rename("Methane" = "CH4 emissions") %>%
bind_cols(Continent = "Asia") # adding column to easily distinguish when combining with Asia Emissions data
FilteredAsiaEmissions2 # final table for visualization
AmericaPlot <- FilteredAmericaEmissions2 %>%
ggplot(aes(x = Area, y = Methane)) +
geom_point(color = "#F8766D")
AmericaPlot
AsiaPlot <- FilteredAsiaEmissions2 %>%
ggplot(aes(x = Area, y = Methane)) +
geom_point(color = "#00BFC4")
AsiaPlot
MethaneAmericaAsia <- bind_rows(FilteredAmericaEmissions2, FilteredAsiaEmissions2) # Combining two tables to create a better data visualizations
AmericaAsiaDensity <-
ggplot(MethaneAmericaAsia, aes(x = Methane, fill = Continent)) +
geom_density(alpha = .5)
AmericaAsiaDensity # overlaid density distributions of America and Aisa emisionss
AmericaAsiaplot <-
ggplot(data = FilteredAmericaEmissions2, aes(x = Area, y = Methane)) +
geom_point(aes(color = Continent)) +
geom_point(data = FilteredAsiaEmissions2, aes(color=Continent)) +
ylim(0, 1000) # removing some outliers by setting the limts of y-axis
AmericaAsiaplot
AvgAmericaAsia <-
MethaneAmericaAsia %>%
group_by(Continent) %>%
summarise(Average = sum(Methane, na.rm = TRUE) / length(Continent)); # Calculating average methane emissions
AvgAmericaAsia
AvgPlot <-
AvgAmericaAsia %>%
ggplot(aes(x = Continent, y = Average)) +
geom_col(aes(fill = Continent))
AvgPlot
Data1 <- read.csv("Emissions_America.csv"); # From Food and Agriculture Organization website
str(Data1)
Data2 <- read.csv("Emissions_Asia.csv"); # From Food and Agriculture Organization website
str(Data2)
filteringMethane <- function(data) {
data %>%
transmute(Area, Unit, Element, Y2019) %>%
filter(Element == "CH4 emissions") %>% # only use methane emissions
group_by(Area, Element, Unit) %>%
summarise(Sum = sum(Y2019)) # total amount of methane emissions by each area in 2019
} # creating filteringMethane to use it for Asia data
FilteredAmericaEmissions <- filteringMethane(Data1)
head(FilteredAmericaEmissions)
FilteredAsiaEmissions <- filteringMethane(Data2) # function created from the previous r code chunk
head(FilteredAsiaEmissions)
FilteredAmericaEmissions2 <-
FilteredAmericaEmissions %>%
pivot_wider(names_from = Element , values_from = Sum) %>% # making a wide table by using the Element column
rename("Methane" = "CH4 emissions") %>%
bind_cols(Continent = "America") # adding column to easily distinguish when combining with Asia Emissions data
FilteredAmericaEmissions2 # final table for visualization
FilteredAsiaEmissions2 <-
FilteredAsiaEmissions %>%
pivot_wider(names_from = Element , values_from = Sum) %>% # making a wide table by using the Element column
rename("Methane" = "CH4 emissions") %>%
bind_cols(Continent = "Asia") # adding column to easily distinguish when combining with Asia Emissions data
FilteredAsiaEmissions2 # final table for visualization
AmericaPlot <- FilteredAmericaEmissions2 %>%
ggplot(aes(x = Area, y = Methane)) +
geom_point(color = "#F8766D")
AmericaPlot
AsiaPlot <- FilteredAsiaEmissions2 %>%
ggplot(aes(x = Area, y = Methane)) +
geom_point(color = "#00BFC4")
AsiaPlot
MethaneAmericaAsia <- bind_rows(FilteredAmericaEmissions2, FilteredAsiaEmissions2) # Combining two tables to create a better data visualizations
AmericaAsiaDensity <-
ggplot(MethaneAmericaAsia, aes(x = Methane, fill = Continent)) +
geom_density(alpha = .5)
AmericaAsiaDensity # overlaid density distributions of America and Aisa emisionss
AmericaAsiaplot <-
ggplot(data = FilteredAmericaEmissions2, aes(x = Area, y = Methane)) +
geom_point(aes(color = Continent)) +
geom_point(data = FilteredAsiaEmissions2, aes(color=Continent)) +
ylim(0, 1000) # removing some outliers by setting the limts of y-axis
AmericaAsiaplot
AvgAmericaAsia <-
MethaneAmericaAsia %>%
group_by(Continent) %>%
summarise(Average = sum(Methane, na.rm = TRUE) / length(Continent)); # Calculating average methane emissions
AvgAmericaAsia
AvgPlot <-
AvgAmericaAsia %>%
ggplot(aes(x = Continent, y = Average)) +
geom_col(aes(fill = Continent))
AvgPlot
Data1 <- read.csv("Emissions_America.csv"); # From Food and Agriculture Organization website
str(Data1)
Data2 <- read.csv("Emissions_Asia.csv"); # From Food and Agriculture Organization website
str(Data2)
filteringMethane <- function(data) {
data %>%
transmute(Area, Unit, Element, Y2019) %>% # only use four variables
filter(Element == "CH4 emissions") %>% # only use methane emissions
group_by(Area, Element, Unit) %>%
summarise(Sum = sum(Y2019)) # total amount of methane emissions by each area in 2019
} # creating filteringMethane to use it for Asia data
FilteredAmericaEmissions <- filteringMethane(Data1)
head(FilteredAmericaEmissions)
FilteredAsiaEmissions <- filteringMethane(Data2) # function created from the previous r code chunk
head(FilteredAsiaEmissions)
FilteredAmericaEmissions2 <-
FilteredAmericaEmissions %>%
pivot_wider(names_from = Element , values_from = Sum) %>% # making a wide table by using the Element column
rename("Methane" = "CH4 emissions") %>%
bind_cols(Continent = "America") # adding column to easily distinguish when combining with Asia Emissions data
FilteredAmericaEmissions2 # final table for visualization
FilteredAsiaEmissions2 <-
FilteredAsiaEmissions %>%
pivot_wider(names_from = Element , values_from = Sum) %>% # making a wide table by using the Element column
rename("Methane" = "CH4 emissions") %>%
bind_cols(Continent = "Asia") # adding column to easily distinguish when combining with Asia Emissions data
FilteredAsiaEmissions2 # final table for visualization
AmericaPlot <- FilteredAmericaEmissions2 %>%
ggplot(aes(x = Area, y = Methane)) +
geom_point(color = "#F8766D")
AmericaPlot
AsiaPlot <- FilteredAsiaEmissions2 %>%
ggplot(aes(x = Area, y = Methane)) +
geom_point(color = "#00BFC4")
AsiaPlot
MethaneAmericaAsia <- bind_rows(FilteredAmericaEmissions2, FilteredAsiaEmissions2) # Combining two tables to create a better data visualizations
AmericaAsiaDensity <-
ggplot(MethaneAmericaAsia, aes(x = Methane, fill = Continent)) +
geom_density(alpha = .5)
AmericaAsiaDensity # overlaid density distributions of America and Aisa emisionss
AmericaAsiaplot <-
ggplot(data = FilteredAmericaEmissions2, aes(x = Area, y = Methane)) +
geom_point(aes(color = Continent)) +
geom_point(data = FilteredAsiaEmissions2, aes(color=Continent)) +
ylim(0, 1000) # removing some outliers by setting the limts of y-axis
AmericaAsiaplot
AvgAmericaAsia <-
MethaneAmericaAsia %>%
group_by(Continent) %>%
summarise(Average = sum(Methane, na.rm = TRUE) / length(Continent)); # Calculating average methane emissions
AvgAmericaAsia
AvgPlot <-
AvgAmericaAsia %>%
ggplot(aes(x = Continent, y = Average)) +
geom_col(aes(fill = Continent))
AvgPlot
Data1 <- read.csv("Emissions_America.csv"); # From Food and Agriculture Organization website
str(Data1)
Data2 <- read.csv("Emissions_Asia.csv"); # From Food and Agriculture Organization website
str(Data2)
filteringMethane <- function(data) {
data %>%
transmute(Area, Unit, Element, Y2019) %>% # only use four variables
filter(Element == "CH4 emissions") %>% # only use methane emissions
group_by(Area, Element, Unit) %>%
summarise(Sum = sum(Y2019)) # total amount of methane emissions by each area in 2019
} # creating filteringMethane to use it for Asia data
FilteredAmericaEmissions <- filteringMethane(Data1)
head(FilteredAmericaEmissions)
FilteredAsiaEmissions <- filteringMethane(Data2) # function created from the previous r code chunk
head(FilteredAsiaEmissions)
FilteredAmericaEmissions2 <-
FilteredAmericaEmissions %>%
pivot_wider(names_from = Element , values_from = Sum) %>% # making a wide table by using the Element column
rename("Methane" = "CH4 emissions") %>%
bind_cols(Continent = "America") # adding column to easily distinguish when combining with Asia Emissions data
FilteredAmericaEmissions2 # final table for visualization
FilteredAsiaEmissions2 <-
FilteredAsiaEmissions %>%
pivot_wider(names_from = Element , values_from = Sum) %>% # making a wide table by using the Element column
rename("Methane" = "CH4 emissions") %>%
bind_cols(Continent = "Asia") # adding column to easily distinguish when combining with Asia Emissions data
FilteredAsiaEmissions2 # final table for visualization
AmericaPlot <- FilteredAmericaEmissions2 %>%
ggplot(aes(x = Area, y = Methane)) +
geom_point(color = "#F8766D")
AmericaPlot
AsiaPlot <- FilteredAsiaEmissions2 %>%
ggplot(aes(x = Area, y = Methane)) +
geom_point(color = "#00BFC4")
AsiaPlot
MethaneAmericaAsia <- bind_rows(FilteredAmericaEmissions2, FilteredAsiaEmissions2) # Combining two tables to create a better data visualizations
AmericaAsiaDensity <-
ggplot(MethaneAmericaAsia, aes(x = Methane, fill = Continent)) +
geom_density(alpha = .5)
AmericaAsiaDensity # overlaid density distributions of America and Aisa emisionss
AmericaAsiaplot <-
ggplot(data = FilteredAmericaEmissions2, aes(x = Area, y = Methane)) +
geom_point(aes(color = Continent)) +
geom_point(data = FilteredAsiaEmissions2, aes(color=Continent)) +
ylim(0, 1000) # removing some outliers by setting the limts of y-axis
AmericaAsiaplot
AvgAmericaAsia <-
MethaneAmericaAsia %>%
group_by(Continent) %>%
summarise(Average = sum(Methane, na.rm = TRUE) / length(Continent)); # Calculating average methane emissions
AvgAmericaAsia
AvgPlot <-
AvgAmericaAsia %>%
ggplot(aes(x = Continent, y = Average)) +
geom_col(aes(fill = Continent))
AvgPlot
log(2.8)+log(0.1)+log(1.4)+log(0.4)
-1.852784/4
(8.1)^2 + (5.4)^2 + (1.8)^2 + (2.9)^2
106.42/8
# 5.c
x=c(8.1,5.4,1.8,2.9)
nll.rayleigh = function(theta, x){
-sum(log((x/(2*theta))*exp((-x^2)/(2*theta))))
}
out = optim(40, nll.rayleigh, x=x)
out
out = optim(10, nll.rayleigh, x=x)
out
out = optim(5, nll.rayleigh, x=x)
out
# 5.c
x=c(8.1,5.4,1.8,2.9)
nll.rayleigh = function(theta, x){
-sum(log((x/(2*theta))*exp((-x^2)/(2*theta))))
}
out = optim(5, nll.rayleigh, x=x)
out
#6.a
x = rcauchy(200,2,5)
hist(x)
}\
# 6.b
nll.cauchy = function(theta, x){
a = theta[1]
b = theta[2]
-sum(log(dcauchy(x,location=a,scale=b)))
}
out = optim(c(1,2), nll.cauchy, x=x)
out
out = optim(c(0,1), nll.cauchy, x=x)
out
out = optim(c(0,0.5), nll.cauchy, x=x)
out
out = optim(c(-1,0), nll.cauchy, x=x)
out
out = optim(c(2,3), nll.cauchy, x=x)
out
# 6.b
nll.cauchy = function(theta, x){
a = theta[1]
b = theta[2]
-sum(log(dcauchy(x,location=a,scale=b)))
}
out = optim(c(0,1), nll.cauchy, x=x)
out
# 6.b
nll.cauchy = function(theta, x){
a = theta[1]
b = theta[2]
-sum(log(dcauchy(x,location=a,scale=b)))
}
out = optim(c(0,1), nll.cauchy, x=x)
out
out = optim(c(1,2), nll.cauchy, x=x)
out
library(EnvStats)
x = rpareto(40, location=10, shape=2)
x
hist(x, breaks=30)
nll.par = function(theata, z){
lc=theata[1]
sh=theata[2]
#-log(prod(dpareto(x, location=lc, shape=sh)))
# use negative log likelihood because 'optim' minimizes
-sum(log(dpareto(x, location=lc, shape=sh)))
}
nll.par(c(10,2),x)
nll.par(c(7,3),x)
out = optim(c(7,2), nll.par, z=x)
out
(log(2.8)+0.46)^2+(log(0.1)+0.46)^2+(log(1.4)+0.46)^2+(log(0.4)+0.46)^2
6.456655/4
0.11-0.86-2.82+0.35+3.1+0.44-0.34
0.11-0.86-2.82+0.35+3.1+0.44-0.34
-0.02/7
sqrt(1/7)
1.96*sqrt(1/7)
-0.0029+0.7408
-0.0029-0.7408
#2.d
set.seed(1)
x=rgamma(20,shape=3,rate=3)
#2.d
set.seed(1)
x=rgamma(20,shape=3,rate=3)
n = length(x)
theata = 3*n / sum(x)
#2.d
set.seed(1)
x=rgamma(20,shape=3,rate=3)
n = length(x)
theata.hat = 3*n / sum(x)
fisher.information = 3*n / theat.hat * theata.hat
confidence.interval = theata.hat +1.96 * sqrt(1/fisher.information)
n <- length(x)
theata.hat <-  3*n / sum(x)
fisher.information <- 3*n / theat.hat * theata.hat
confidence.interval <- theata.hat +1.96 * sqrt(1/fisher.information)
confidence.interval
fisher.information <- (3*n / theata.hat * theata.hat)
confidence.interval <- theata.hat +1.96 * sqrt(1/fisher.information)
confidence.interval
#2.d
set.seed(1)
x=rgamma(20,shape=3,rate=3)
n <- length(x)
theata.hat <-  3*n / sum(x)
fisher.information <- (3*n / theata.hat * theata.hat)
confidence.interval <- theata.hat +1.96 * sqrt(1/fisher.information)
confidence.interval
#2.d
set.seed(1)
x=rgamma(20,shape=3,rate=3)
n <- length(x)
theata.hat <-  3*n / sum(x)
fisher.information <- (3*n / theata.hat * theata.hat)
confidence.interval1 <- theata.hat + 1.96 * sqrt(1/fisher.information)
confidence.interval2 <- theata.hat - 1.96 * sqrt(1/fisher.information)
confidence.interval1
confidence.interval2
#2.d
set.seed(1)
x=rgamma(20,shape=3,rate=3)
n <- length(x)
theata.hat <-  3*n / sum(x)
fisher.information <- (3*n / theata.hat * theata.hat)
confidence.interval1 <- theata.hat + (1.96 * sqrt(1/fisher.information))
confidence.interval2 <- theata.hat - (1.96 * sqrt(1/fisher.information))
confidence.interval1
confidence.interval2
#3.d
set.seed(1)
x=rpois(20,3)
n <- length(x)
v.hat <-  sum(x)/n
fisher.information <- n/v.hat
confidence.interval1 <- v.hat + (1.96 * sqrt(1/fisher.information))
confidence.interval2 <- v.hat - (1.96 * sqrt(1/fisher.information))
confidence.interval1
confidence.interval2
#3.e
set.seed(1)
x=rpois(2000,3)
n <- length(x)
v.hat <-  sum(x)/n
fisher.information <- n/v.hat
confidence.interval1 <- v.hat + (1.96 * sqrt(1/fisher.information))
confidence.interval2 <- v.hat - (1.96 * sqrt(1/fisher.information))
confidence.interval1
confidence.interval2
-4*(pi/4)*(pi/4)
4*pi*(pi/4)
pi*pi
-2.467401+9.869604
7.402203/9.869604
sqrt(2)/2
0.7071068-0.75
pi^3
(pi^3)/128
(log(3)-1)*(log(3)-4)
-0.2861125/-2
log(2)
0.1430562*0.6931472
(log(3)-1)*(log(3)-2)
-0.08888791*log(4)
-0.1232248/6
0.099159-0.02053747
ln(3)
log(3)
1.098612-1.155
#2.d
set.seed(1)
x=rgamma(20,shape=3,rate=3)
n <- length(x)
theata.hat <-  3*n / sum(x)
fisher.information <- (3*n) / (theata.hat * theata.hat)
confidence.interval1 <- theata.hat + (1.96 * sqrt(1/fisher.information))
confidence.interval2 <- theata.hat - (1.96 * sqrt(1/fisher.information))
confidence.interval1
confidence.interval2
setwd("~/Documents/GitHub/PSU_Stat_380/Homework/project_6_reddit_topic_model")
hyper_perm_tune<-NULL
source("~/Documents/GitHub/PSU_Stat_380/Homework/project_6_reddit_topic_model/project/src/models/reddit_topic_xgboost_v6.R")
setwd("~/Documents/GitHub/PSU_Stat_380/Homework/project_4_house_price_2")
source("~/Documents/GitHub/PSU_Stat_380/Homework/project_4_house_price_2/project/src/models/xgboost_model_house_price_v3.R")
rmse(y.train,train_pred)
